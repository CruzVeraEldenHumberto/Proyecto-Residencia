<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>